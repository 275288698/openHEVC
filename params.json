{"name":"Openhevc","tagline":"","body":"openHEVC\r\n========\r\n\r\nopenHEVC is a fork of Libav with only the files needed to decode HEVC content, it was created for research purposes.\r\nMost people will not need to use this and should use the libav HEVC decoder available at https://github.com/OpenHEVC/ffmpeg instead (see https://ffmpeg.org/documentation.html for documentation).\r\n\r\nopenHEVC in combination with GPAC is used in 3 research projects:\r\n* 4EVER\r\n* H2B2VS\r\n* AUSTRAL\r\n\r\nWhat does openHEVC support?\r\n--------\r\n* Main Profile (all conformance bitstream except BUMPING)\r\n* Main 10 Profile (except different combination of luma/chroma bitwidth)\r\n* Range extension (4:2:2/4:4:4)\r\n  - Bitstream aligned with April 2014 HEVC standard\r\n* support of SHM4.1 bitstreams\r\n\r\nWhere is the source code of openHEVC?\r\n--------\r\n* openHEVC is located at https://github.com/OpenHEVC/openHEVC.\r\n* openHEVC is under LGPL2.1 license\r\n* reusing ffmpeg runtime for multithreading\r\n\r\nWhere is the source code of GPAC?\r\n--------\r\n* gpac is located at http://gpac.wp.mines-telecom.fr.\r\n* gpac is under LGPL license\r\n\r\nHow to compile openHEVC on linux from source code\r\n----------\r\n* execute these commands\r\n\r\n```sh\r\ngit clone git://github.com/OpenHEVC/openHEVC.git\r\ngit checkout hevc_rext\r\n```\r\n* install yasm\r\n* go into OpenHEVC source folder\r\n* execute these commands\r\n\r\n```sh\r\nmkdir build\r\ncd build\r\ncmake -DCMAKE_BUILD_TYPE=RELEASE ..\r\nmake\r\nsudo make install\r\n```\r\n\r\nHow to test openHEVC on linux from source code\r\n----------\r\n* Prerequisites: SDL or SDL2\r\n* go into source folder of openHEVC\r\n* with SDL: `cd build; ./hevc -i name_of_annexB_bitstream.(bit,bin,265)`\r\n* with SDL2: `cd build; ./hevc_sdl2 -i name_of_annexB_bitstream.(bit,bin,265)`\r\n  - add `-n` to remove the display \r\n  - add `-l layer` with `layer` a number to select the layer in a SHVC bitstream \r\n  - add `-f xx` with `xx` to select frame-based (`0`), wpp/tiles (`1`) or combination of frame-based and wpp (`4`)\r\n  - add `-p` to select the number of threads when -f is activated\r\n\r\nHow to compile gpac with openHEVC on linux\r\n-----------\r\n* Prerequisites (see http://gpac.wp.mines-telecom.fr/2011/04/20/compiling-gpac-on-ubuntu/)\r\n* `svn checkout https://gpac.svn.sourceforge.net/svnroot/gpac/trunk`\r\n* go into gpac source folder\r\n* execute these commands\r\n\r\n```sh\r\n./configure \r\nmake\r\nsudo make install\r\n```\r\n\r\nHow to embed HEVC into MP4 file format\r\n-----------\r\n* use i_main, lp_main, ld_main or ra_main bitstreams from http://ftp.kw.bbc.co.uk/hevc/hm-10.0-anchors/bitstreams/\r\n* `MP4Box -add name_of_annexB_bitstream.(bit,bin,265) -fps 50 -new output.mp4`\r\n  + where fps specifies the framerate (in the case of BQMall_832x480_60_qp22.bin the framerate is 60)\r\n* `MP4Client output.mp4 # to play HEVC mp4 content`\r\n\r\nHow to embed HEVC into TS\r\n-----------\r\n* use i_main, lp_main, ld_main or ra_main bitstreams from http://ftp.kw.bbc.co.uk/hevc/hm-10.0-anchors/bitstreams/\r\n* go into gpac source folder\r\n* execute these commands:\r\n\r\n```sh\r\ncd bin/gcc\r\n./mp42ts -prog=hevc.mp4 -dst-file=test.ts\r\nMP4Client test.ts # to play HEVC transport streams\r\n```\r\n\r\nopenHEVC contributors\r\n-----------\r\n* Active contributors\r\n  + Guillaume Martres (alias smarter - google summer of code / EPFL) - student\r\n  + Mickaël Raulet (IETR/INSA Rennes)\r\n  + Gildas Cocherel (IETR/INSA Rennes)\r\n  + Wassim Hamidouche (IETR/INSA Rennes)\r\n  + Seppo Tomperi (VTT)\r\n  + Pierre Edouard Lepere (IETR/INSA Rennes)\r\n  + Fernando Pescador Del Oso (UPM)\r\n  + Jesus Caño Velasco (UPM)\r\n\r\n* Former contributors\r\n  + Anand Meher Kotra (IETR/INSA Rennes)\r\n\r\n- gpac contributors\r\n-----------\r\n* see http://gpac.wp.mines-telecom.fr/about/\r\n\r\nPublications\r\n-----------\r\n* Conferences:\r\n  + Hamidouche W., Raulet M., Déforges O, « Real time SHVC decoder: Implementation and complexity analysis », dans ICIP 2014 – IEEE International Conference on Image Processing\r\n\r\n  + Hamidouche W., Raulet M., Déforges O., « Parallel SHVC Decoder: Implementation and Analysis », ICME 2014 – IEEE International Conference on Multimedia and Expo.\r\n\r\n  + Hamidouche W., Raulet M., Déforges O., « Multi-core software architecture for the scalable HEVC decoder »,  dans ICASSP 2014 – IEEE International Conference on Acoustics, Speech, and Signal Processing\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}